server:
  port: ${SERVER_PORT:9020}
  undertow:
    io-threads: 8
    worker-threads: 256
    buffer-size: 1024
    direct-buffers: true


spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8081/uaa/.well-known/jwks.json
    user:
      name: system
      password: sys123
      roles: SYSTEM
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: ${DB_URL:jdbc:mysql://localhost:3306/guilin_basket?useUnicode=true&characterEncoding=utf8&useSSL=false}
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:admin}
    hikari:
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
  rabbitmq:
    host: ${RABBIT_HOST:192.168.1.101}
    port: ${RABBIT_PORT:5672}
    username: ${RABBIT_USERNAME:sid}
    password: ${RABBIT_PASSWORD:111111}
    virtual-host: ${RABBIT_VHOST:guilin}
  zipkin:
    sender:
      type: rabbit
    base-url: http://zipkin-service/
  sleuth:
    sampler:
      probability: 1.0
  cloud:
    stream:
      bindings:
        int_input:
          destination: guilin_int
          contentType: application/json
          group: basket
          consumer:
            maxAttempts: 1
        int_output:
          destination: guilin_int
          contentType: application/json
      rabbit:
        bindings:
          int_input:
            consumer:
              acknowledgeMode: MANUAL
              autoBindDlq: true
              bindingRoutingKey: '#.basket.#'
          int_output:
            producer:
              transacted: true
              routingKeyExpression: '''basket.order'''
management:
  endpoints:
    web:
      base-path: /manage
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: when_authorized
      roles: SYSTEM
    metrics:
      enabled: true
  info:
    git:
      mode: full


info:
  project:
    version: @project.version@

zipkin:
  rabbitmq:
    queue: zipkin
# Put eureka.client.healthcheck.enabled=true application.yml instead of in bootstrap.yml.
# Otherwise the status in Eureka always get unknown error.
# eureka.client.serviceUrl.defaultZone need to be set in
# bootstrap.yml if set spring.cloud.discovery.enabled=true
eureka:
  instance:
    statusPageUrlPath: ${management.endpoints.web.base-path}/info
    healthCheckUrlPath: ${management.endpoints.web.base-path}/health
    instanceId: ${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${random.id}}
  client:
    healthcheck:
      enabled: true
    fetchRegistry: true
    registerWithEureka: true
    preferSameZoneEureka: true
    registryFetchIntervalSeconds: 30

#mybatis:
#  config-location: classpath:mybatis-config.xml

# swagger
application:
  swagger:
    enable: ${SWAGGER_ENABLED:true}
    default-include-pattern: /api/.*
    title: @project.artifactId@
    description: API documentation
    version: v1
    terms-of-service-url:
    contact-name:
    contact-url:
    contact-email:
    license:
    license-url: